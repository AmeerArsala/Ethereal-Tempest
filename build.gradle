plugins {
    id "io.github.0ffz.github-packages" version "1.2.1"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'idea'

ext {
    jmonkeyengine_version = '3.4.0-stable' //latest version: 3.4.0-stable
    license = file("$rootDir/license.txt")
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven githubPackage.invoke("riccardobl")
}

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'etherealtempest.Main'
}
mainClassName = ext.mainClass

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task(debug, dependsOn: classes, type: JavaExec) {
    main = getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty('args')) {
        args(project.getAt('args').split(','))
    }
    standardInput = System.in
    ignoreExitValue = true
    debug true
}

artifacts {
    archives sourcesJar
    //	archives javadocJar
}

dependencies {
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation "org.jmonkeyengine:jme3-core:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-desktop:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-lwjgl3:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-plugins:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-effects:$jmonkeyengine_version"

    //implementation "com.simsilica:zay-es:1.3.2"
    //implementation "com.simsilica:zay-es-net:1.4.3"
    implementation "com.simsilica:sio2:1.5.0"
    implementation "com.simsilica:sim-ethereal:1.5.0"
    
    implementation files('C:\\Users\\night\\Desktop\\portfolio\\nonmobile\\libraries (java)\\SimArboreal.jar')
    implementation files('C:\\Users\\night\\Desktop\\portfolio\\nonmobile\\libraries (java)\\arboreal-assets.jar')
    implementation files('C:\\Users\\night\\Desktop\\portfolio\\nonmobile\\libraries (java)\\MathParser.org-mXparser-4.4.2.jar')
    
    implementation "com.atr:jme-ttf:2.2.2"
    implementation "org.jmonkeyengine:jme3-terrain:3.3.2-stable"
    
    implementation 'wf.frk:jme-effekseer-native:0.3'
    implementation 'com.github.destroflyer.jme3-effekseer:jme3-effekseer:44aff53'
    
    //compile "com.simsilica:sim-fx:1.0.+"
    //runtime "com.simsilica:sim-fx:1.0.+:assets"
    
    compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
        
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDirs 'assets'
            exclude 'Converted/**'
        }
    }
}


eclipse {
    classpath {
        downloadSources=true
    }
    jdt {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    project {
        natures 'org.springsource.ide.eclipse.gradle.core.nature'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

compileJava {
    sourceCompatibility = '1.8'
    options.incremental = true
    // We have annotation processors in log4j, only needed for writing plugins, disable the warnings
    options.compilerArgs += ["-proc:none"]
    //options.compilerArgs += ["-Xlint:deprecation"]
    //options.compilerArgs += ["-Xlint:unchecked"]
}

wrapper {
    gradleVersion = '6.5.1'
}
